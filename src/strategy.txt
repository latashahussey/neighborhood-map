copy bootstrap starter template - done!

link minified css - done!

link app.js - done!

setup google maps api - done!
- add div#map -done!
- add google api link w/key - done!
- specify google api libraries: drawing, geometry, places - done!

display map on page - done!
- add css to style map, must add height, width to #map and/or html, body - done!

display all marker locations on map by default

animate markers when clicked (e.g. bounce, color change)

create slide out side panel

add fields to panel
- filter location, text input or dropdown
- list view, list of location names, display all by default

create view model using knockout MVVM pattern, use observables

create infoWindow - displays info about location when clicked

must have at least 5 locations (hard-coded) or retrieved from data API

complete README file with instructions to build app with gulp

OPTIONAL:
Add unique functionality beyond the minimum requirements (i.e. the ability to “favorite” a location, etc.).
Incorporate a build process allowing for production quality, minified code, to be delivered to the client.
Data persists when the app is closed and reopened, either through localStorage or an external database (e.g. Firebase).
Include additional third-party data sources beyond the minimum required.
Style different markers in different (and functionally-useful) ways, depending on the data set.
Implement additional optimizations that improve the performance and user experience of the filter functionality (keyboard shortcuts, autocomplete functionality, filtering of multiple fields, etc).
Integrate all application components into a cohesive and enjoyable user experience.


-------------
Webcast Notes
--------------

Mobile first design
Then zoom out to find key breakpoints until you get to full desktop

Code must be separated based on knockout's best practices
Go through Knockout's documentation to learn skills (also remember creator of Knockout gave presentation on this online)
